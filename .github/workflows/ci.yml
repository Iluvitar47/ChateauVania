name: CI Pipeline

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Étape 1: Checkout du code
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 2: Cache des dépendances Gradle
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Étape 3: Configuration du JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Étape 4: Donne la permission d'exécution pour le script de test
      - name: Grant execute permission for the test script
        run: chmod +x run_tests.sh

      # Étape 5: Exécution des tests
      - name: Run tests
        run: ./run_tests.sh

      # Étape 6: Vérification de la présence du fichier de couverture
      - name: Check if coverage file exists
        run: |
          if [ -f ./build/reports/jacoco/test/jacocoTestReport.xml ]; then
            echo "Coverage report found."
          else
            echo "Coverage report not found."
            exit 1
          fi

      # Étape 7: Upload de la couverture vers Codecov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./build/reports/jacoco/test/html
          token: bc4c5112-e943-4277-a815-0cea3f404cd5
